<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="Office365.DocumentList" locale="">
  <web>Office365</web>
  <name>DocumentList</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Office365.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>$services.localization.render('office365.documentlist.title')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{groovy}}
println services.localization.render('office365.documentlist.description')
println ""

def azureAuth = xwiki.parseGroovyFromPage("Office365.Groovy")
azureAuth.setXWiki(xwiki, xcontext, doc)

if (!azureAuth.authenticate()) {
  println """
{{warning}}
${services.localization.render('office365.cannotauthenticate')}
{{/warning}}
"""
} else {
 def escapetool = new org.xwiki.velocity.tools.EscapeTool()
 def text = "xwiki";
 if (request.text)
  text = request.text;
 println """
{{html clean="false"}}
&lt;form action="" method="get"&gt;
${services.localization.render('office365.documentlist.searchterm')}: &lt;input type="text" name="text" value="${escapetool.xml(text)}" /&gt; &lt;input type="submit" value="${escapetool.xml(services.localization.render('office365.documentlist.search'))}" /&gt;
&lt;/form&gt;
{{/html}}
"""
 
 def driveURL = "https://graph.microsoft.com/v1.0/me/drive/search(q='${escapetool.url(text)}')"
 if (request.debug)
   println "Drive url: ${driveURL}"
 def res = azureAuth.getGraphApiData(driveURL)
 azureAuth.debug("{{html}}{{{ ${res} }}}{{/html}}")
 if (res.error) {
   println azureAuth.renderErrorFromResponse(res, 'office365.macro.search.error');
 }
 def counter = 0;
 for (item in res.value) {
   counter++;
   println """* [[${counter}&gt;&gt;||queryString="counter=${counter}"]] - ${item.name} - [[edit&gt;&gt;url:${item.webUrl}]]"""
   if ("${counter}"==request.counter) {
println """
{{html clean=false}}
&lt;iframe src="${item.webUrl.replaceAll("action=default","action=embedview")}" width="100%" height="1000"&gt;
&lt;/iframe&gt;
{{/html}}
  """
  }
 }
} 

println azureAuth.getAuthentication(request)
println azureAuth.showDebug()

{{/groovy}}</content>
</xwikidoc>
