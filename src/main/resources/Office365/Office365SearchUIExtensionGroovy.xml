<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="Office365.Office365SearchUIExtensionGroovy" locale="">
  <web>Office365</web>
  <name>Office365SearchUIExtensionGroovy</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Office365.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Office365 Search UIExtension Groovy</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{groovy}}
def escapetool = new org.xwiki.velocity.tools.EscapeTool()
def configPage = "Office365.Office365Config"
def activateSearch = xwiki.getDocument(configPage).getValue("activateSearchExtension")
if (activateSearch==null)
 activateSearch = xwiki.getDocument("xwiki:${configPage}").getValue("activateSearchExtension")
if (activateSearch==1) {
if (request.text) {
 def azureAuth = xwiki.parseGroovyFromPage("Office365.Groovy")
 azureAuth.setXWiki(xwiki, xcontext, doc)

 if (!azureAuth.authenticate()) {
 } else {

println """(% class="search-widget search-facets col-xs-12 col-sm-12" style="padding: 5px; margin-bottom: 10px;" %)
(((
"""

 def driveURL = "https://graph.microsoft.com/v1.0/me/drive/search(q='${escapetool.url(request.text)}')"
 // println "Drive url: ${driveURL}"
 def res = azureAuth.getGraphApiData(driveURL)
 azureAuth.debug("{{html}}{{{ ${res} }}}{{/html}}")
 def otitle = services.localization.render('office365.uiextension.nomatchingdocs', [ request.text ]);


 if (res==null || res.value==null)
   otitle = services.localization.render('office365.uiextension.error', [ request.text ]);
 else if (res.value.size()&gt;0)
   otitle = services.localization.render('office365.uiextension.matchingdocs', [ res.value.size(), request.text ]);

 println """{{showhide showmessage="${otitle}" hidemessage="${otitle}" }}""" 
 if (res!=null) {
  for (item in res.value) {
   println """* [[${item.name}&gt;&gt;${item.webUrl}||target="_blank"]]"""
  }
 }
 println "{{/showhide}}"
 println ")))"
 }
 if (request.debug)
   println "DEBUG: {{{ ${azureAuth.debugStr} }}}"
}
}
{{/groovy}}</content>
</xwikidoc>
